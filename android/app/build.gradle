def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new FileNotFoundException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdk 33
    ndkVersion "21.1.6352462"

    defaultConfig {
        minSdkVersion 23
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    lintOptions {
        disable 'InvalidPackage'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dependencies {
        implementation "com.mapbox.mapboxsdk:mapbox-android-sdk:9.6.2"
        implementation "com.mapbox.mapboxsdk:mapbox-android-plugin-annotation-v9:0.9.0"
        implementation "com.mapbox.mapboxsdk:mapbox-android-plugin-localization-v9:0.12.0"
        implementation 'com.mapbox.mapboxsdk:mapbox-android-plugin-offline-v9:0.7.0'
        implementation 'com.squareup.okhttp3:okhttp:4.9.0'
        implementation 'com.mapbox.mapboxsdk:mapbox-sdk-turf:5.1.0'
        implementation(platform("org.jetbrains.kotlin:kotlin-bom:1.8.0"))
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
}

flutter {
    source '../..'
}
